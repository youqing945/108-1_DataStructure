////////////////////////////////////////////////////////////
ackerman.cpp:

此為阿克曼函數使用遞迴實作，此函數被研究係因為期增加速率極快。
本程式的遞迴方式直接採用定義實作，函式本身即A(m, n)。
但由於遞迴的缺點為會占用大量記憶體，故本程式大多只能在m<=3時使用。
m=4時，就算n值緩慢增加，函數值也會以驚人的速度成長。
本程式在m=4, n=1時即會因記憶體空間問題而無法執行完整。
////////////////////////////////////////////////////////////
powerset.cpp:

此為透過給定一定數量的字串，計算這些字串總共有哪幾種組合。
本程式的做法是，根據字串總數量N，另加開一陣列ans紀錄所有組合種類，
並加開陣列no1計算每一種組合共有幾個字串，最後依照數字大小將所有組合列印出來。
計算所有組合種類有很多種遞迴法，最後選擇使用此種遞迴因為較好理解。
流程圖: https://ppt.cc/fRmiUx

另外找到一種遞迴法是針對不同種字串而複製一份清單並在複製的清單每列最後加入新字串。
但礙於資料型態問題可能難以實作與不易理解，故最後不採用。
連結:https://ppt.cc/fEEMxx (Method 3, 使用java)
////////////////////////////////////////////////////////////